# Generated from core/C.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,94,689,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,1,0,1,0,3,0,192,8,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,3,0,203,8,0,1,0,1,0,5,0,207,8,0,10,0,12,0,210,
        9,0,1,0,1,0,1,0,5,0,215,8,0,10,0,12,0,218,9,0,1,0,3,0,221,8,0,1,
        0,3,0,224,8,0,1,0,1,0,1,0,1,0,1,1,1,1,5,1,232,8,1,10,1,12,1,235,
        9,1,1,1,1,1,1,2,1,2,5,2,241,8,2,10,2,12,2,244,9,2,1,2,1,2,1,3,1,
        3,1,3,5,3,251,8,3,10,3,12,3,254,9,3,3,3,256,8,3,1,4,4,4,259,8,4,
        11,4,12,4,260,1,4,1,4,5,4,265,8,4,10,4,12,4,268,9,4,1,4,3,4,271,
        8,4,1,4,1,4,4,4,275,8,4,11,4,12,4,276,1,4,3,4,280,8,4,1,4,4,4,283,
        8,4,11,4,12,4,284,1,4,3,4,288,8,4,1,5,1,5,3,5,292,8,5,1,5,4,5,295,
        8,5,11,5,12,5,296,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,
        15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,
        17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,
        20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
        22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,
        25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,
        29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
        30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,
        32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,
        34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
        36,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,
        39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,
        41,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,
        46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,1,51,1,51,1,52,1,
        52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,58,1,
        58,1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,
        63,1,63,1,64,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,
        69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,
        74,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,78,1,
        78,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,
        82,1,83,1,83,1,83,1,84,1,84,1,84,1,85,1,85,1,85,1,86,1,86,1,87,1,
        87,1,87,1,87,1,88,1,88,5,88,642,8,88,10,88,12,88,645,9,88,1,89,4,
        89,648,8,89,11,89,12,89,649,1,89,1,89,1,90,1,90,3,90,656,8,90,1,
        90,3,90,659,8,90,1,90,1,90,1,91,1,91,1,91,1,91,5,91,667,8,91,10,
        91,12,91,670,9,91,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,5,
        92,681,8,92,10,92,12,92,684,9,92,1,92,1,92,1,93,1,93,1,668,0,94,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
        71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,
        93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
        113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,
        66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,
        151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,
        85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,
        1,0,10,2,0,10,10,13,13,1,0,34,34,1,0,39,39,1,0,49,57,1,0,48,57,2,
        0,69,69,101,101,2,0,43,43,45,45,3,0,65,90,95,95,97,122,4,0,48,57,
        65,90,95,95,97,122,3,0,9,10,13,13,32,32,714,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
        0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
        0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
        0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
        0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
        0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
        0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
        0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,
        1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,
        0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,
        0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,
        141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,
        0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,
        1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,
        0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,
        0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,
        187,1,0,0,0,1,189,1,0,0,0,3,229,1,0,0,0,5,238,1,0,0,0,7,255,1,0,
        0,0,9,287,1,0,0,0,11,289,1,0,0,0,13,298,1,0,0,0,15,304,1,0,0,0,17,
        308,1,0,0,0,19,313,1,0,0,0,21,319,1,0,0,0,23,324,1,0,0,0,25,333,
        1,0,0,0,27,341,1,0,0,0,29,344,1,0,0,0,31,349,1,0,0,0,33,354,1,0,
        0,0,35,361,1,0,0,0,37,365,1,0,0,0,39,370,1,0,0,0,41,373,1,0,0,0,
        43,380,1,0,0,0,45,389,1,0,0,0,47,398,1,0,0,0,49,405,1,0,0,0,51,412,
        1,0,0,0,53,419,1,0,0,0,55,426,1,0,0,0,57,433,1,0,0,0,59,441,1,0,
        0,0,61,447,1,0,0,0,63,456,1,0,0,0,65,462,1,0,0,0,67,468,1,0,0,0,
        69,475,1,0,0,0,71,484,1,0,0,0,73,489,1,0,0,0,75,494,1,0,0,0,77,500,
        1,0,0,0,79,504,1,0,0,0,81,509,1,0,0,0,83,515,1,0,0,0,85,522,1,0,
        0,0,87,524,1,0,0,0,89,527,1,0,0,0,91,529,1,0,0,0,93,532,1,0,0,0,
        95,534,1,0,0,0,97,536,1,0,0,0,99,538,1,0,0,0,101,540,1,0,0,0,103,
        542,1,0,0,0,105,544,1,0,0,0,107,546,1,0,0,0,109,548,1,0,0,0,111,
        550,1,0,0,0,113,552,1,0,0,0,115,555,1,0,0,0,117,557,1,0,0,0,119,
        560,1,0,0,0,121,563,1,0,0,0,123,566,1,0,0,0,125,568,1,0,0,0,127,
        570,1,0,0,0,129,573,1,0,0,0,131,576,1,0,0,0,133,578,1,0,0,0,135,
        580,1,0,0,0,137,582,1,0,0,0,139,584,1,0,0,0,141,586,1,0,0,0,143,
        588,1,0,0,0,145,590,1,0,0,0,147,592,1,0,0,0,149,595,1,0,0,0,151,
        598,1,0,0,0,153,601,1,0,0,0,155,604,1,0,0,0,157,607,1,0,0,0,159,
        611,1,0,0,0,161,615,1,0,0,0,163,618,1,0,0,0,165,621,1,0,0,0,167,
        624,1,0,0,0,169,627,1,0,0,0,171,630,1,0,0,0,173,633,1,0,0,0,175,
        635,1,0,0,0,177,639,1,0,0,0,179,647,1,0,0,0,181,658,1,0,0,0,183,
        662,1,0,0,0,185,676,1,0,0,0,187,687,1,0,0,0,189,191,5,35,0,0,190,
        192,3,179,89,0,191,190,1,0,0,0,191,192,1,0,0,0,192,193,1,0,0,0,193,
        194,5,105,0,0,194,195,5,110,0,0,195,196,5,99,0,0,196,197,5,108,0,
        0,197,198,5,117,0,0,198,199,5,100,0,0,199,200,5,101,0,0,200,202,
        1,0,0,0,201,203,3,179,89,0,202,201,1,0,0,0,202,203,1,0,0,0,203,220,
        1,0,0,0,204,208,5,34,0,0,205,207,8,0,0,0,206,205,1,0,0,0,207,210,
        1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,0,209,211,1,0,0,0,210,208,
        1,0,0,0,211,221,5,34,0,0,212,216,5,60,0,0,213,215,8,0,0,0,214,213,
        1,0,0,0,215,218,1,0,0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,219,
        1,0,0,0,218,216,1,0,0,0,219,221,5,62,0,0,220,204,1,0,0,0,220,212,
        1,0,0,0,221,223,1,0,0,0,222,224,3,179,89,0,223,222,1,0,0,0,223,224,
        1,0,0,0,224,225,1,0,0,0,225,226,3,181,90,0,226,227,1,0,0,0,227,228,
        6,0,0,0,228,2,1,0,0,0,229,233,5,34,0,0,230,232,8,1,0,0,231,230,1,
        0,0,0,232,235,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,236,1,
        0,0,0,235,233,1,0,0,0,236,237,5,34,0,0,237,4,1,0,0,0,238,242,5,39,
        0,0,239,241,8,2,0,0,240,239,1,0,0,0,241,244,1,0,0,0,242,240,1,0,
        0,0,242,243,1,0,0,0,243,245,1,0,0,0,244,242,1,0,0,0,245,246,5,39,
        0,0,246,6,1,0,0,0,247,256,5,48,0,0,248,252,7,3,0,0,249,251,7,4,0,
        0,250,249,1,0,0,0,251,254,1,0,0,0,252,250,1,0,0,0,252,253,1,0,0,
        0,253,256,1,0,0,0,254,252,1,0,0,0,255,247,1,0,0,0,255,248,1,0,0,
        0,256,8,1,0,0,0,257,259,7,4,0,0,258,257,1,0,0,0,259,260,1,0,0,0,
        260,258,1,0,0,0,260,261,1,0,0,0,261,262,1,0,0,0,262,266,3,173,86,
        0,263,265,7,4,0,0,264,263,1,0,0,0,265,268,1,0,0,0,266,264,1,0,0,
        0,266,267,1,0,0,0,267,270,1,0,0,0,268,266,1,0,0,0,269,271,3,11,5,
        0,270,269,1,0,0,0,270,271,1,0,0,0,271,288,1,0,0,0,272,274,3,173,
        86,0,273,275,7,4,0,0,274,273,1,0,0,0,275,276,1,0,0,0,276,274,1,0,
        0,0,276,277,1,0,0,0,277,279,1,0,0,0,278,280,3,11,5,0,279,278,1,0,
        0,0,279,280,1,0,0,0,280,288,1,0,0,0,281,283,7,4,0,0,282,281,1,0,
        0,0,283,284,1,0,0,0,284,282,1,0,0,0,284,285,1,0,0,0,285,286,1,0,
        0,0,286,288,3,11,5,0,287,258,1,0,0,0,287,272,1,0,0,0,287,282,1,0,
        0,0,288,10,1,0,0,0,289,291,7,5,0,0,290,292,7,6,0,0,291,290,1,0,0,
        0,291,292,1,0,0,0,292,294,1,0,0,0,293,295,7,4,0,0,294,293,1,0,0,
        0,295,296,1,0,0,0,296,294,1,0,0,0,296,297,1,0,0,0,297,12,1,0,0,0,
        298,299,5,99,0,0,299,300,5,108,0,0,300,301,5,97,0,0,301,302,5,115,
        0,0,302,303,5,115,0,0,303,14,1,0,0,0,304,305,5,110,0,0,305,306,5,
        101,0,0,306,307,5,119,0,0,307,16,1,0,0,0,308,309,5,97,0,0,309,310,
        5,117,0,0,310,311,5,116,0,0,311,312,5,111,0,0,312,18,1,0,0,0,313,
        314,5,98,0,0,314,315,5,114,0,0,315,316,5,101,0,0,316,317,5,97,0,
        0,317,318,5,107,0,0,318,20,1,0,0,0,319,320,5,99,0,0,320,321,5,97,
        0,0,321,322,5,115,0,0,322,323,5,101,0,0,323,22,1,0,0,0,324,325,5,
        99,0,0,325,326,5,111,0,0,326,327,5,110,0,0,327,328,5,116,0,0,328,
        329,5,105,0,0,329,330,5,110,0,0,330,331,5,117,0,0,331,332,5,101,
        0,0,332,24,1,0,0,0,333,334,5,100,0,0,334,335,5,101,0,0,335,336,5,
        102,0,0,336,337,5,97,0,0,337,338,5,117,0,0,338,339,5,108,0,0,339,
        340,5,116,0,0,340,26,1,0,0,0,341,342,5,100,0,0,342,343,5,111,0,0,
        343,28,1,0,0,0,344,345,5,101,0,0,345,346,5,108,0,0,346,347,5,115,
        0,0,347,348,5,101,0,0,348,30,1,0,0,0,349,350,5,101,0,0,350,351,5,
        110,0,0,351,352,5,117,0,0,352,353,5,109,0,0,353,32,1,0,0,0,354,355,
        5,101,0,0,355,356,5,120,0,0,356,357,5,116,0,0,357,358,5,101,0,0,
        358,359,5,114,0,0,359,360,5,110,0,0,360,34,1,0,0,0,361,362,5,102,
        0,0,362,363,5,111,0,0,363,364,5,114,0,0,364,36,1,0,0,0,365,366,5,
        103,0,0,366,367,5,111,0,0,367,368,5,116,0,0,368,369,5,111,0,0,369,
        38,1,0,0,0,370,371,5,105,0,0,371,372,5,102,0,0,372,40,1,0,0,0,373,
        374,5,105,0,0,374,375,5,110,0,0,375,376,5,108,0,0,376,377,5,105,
        0,0,377,378,5,110,0,0,378,379,5,101,0,0,379,42,1,0,0,0,380,381,5,
        114,0,0,381,382,5,101,0,0,382,383,5,103,0,0,383,384,5,105,0,0,384,
        385,5,115,0,0,385,386,5,116,0,0,386,387,5,101,0,0,387,388,5,114,
        0,0,388,44,1,0,0,0,389,390,5,114,0,0,390,391,5,101,0,0,391,392,5,
        115,0,0,392,393,5,116,0,0,393,394,5,114,0,0,394,395,5,105,0,0,395,
        396,5,99,0,0,396,397,5,116,0,0,397,46,1,0,0,0,398,399,5,114,0,0,
        399,400,5,101,0,0,400,401,5,116,0,0,401,402,5,117,0,0,402,403,5,
        114,0,0,403,404,5,110,0,0,404,48,1,0,0,0,405,406,5,115,0,0,406,407,
        5,105,0,0,407,408,5,122,0,0,408,409,5,101,0,0,409,410,5,111,0,0,
        410,411,5,102,0,0,411,50,1,0,0,0,412,413,5,115,0,0,413,414,5,116,
        0,0,414,415,5,97,0,0,415,416,5,116,0,0,416,417,5,105,0,0,417,418,
        5,99,0,0,418,52,1,0,0,0,419,420,5,115,0,0,420,421,5,116,0,0,421,
        422,5,114,0,0,422,423,5,117,0,0,423,424,5,99,0,0,424,425,5,116,0,
        0,425,54,1,0,0,0,426,427,5,115,0,0,427,428,5,119,0,0,428,429,5,105,
        0,0,429,430,5,116,0,0,430,431,5,99,0,0,431,432,5,104,0,0,432,56,
        1,0,0,0,433,434,5,116,0,0,434,435,5,121,0,0,435,436,5,112,0,0,436,
        437,5,101,0,0,437,438,5,100,0,0,438,439,5,101,0,0,439,440,5,102,
        0,0,440,58,1,0,0,0,441,442,5,117,0,0,442,443,5,110,0,0,443,444,5,
        105,0,0,444,445,5,111,0,0,445,446,5,110,0,0,446,60,1,0,0,0,447,448,
        5,118,0,0,448,449,5,111,0,0,449,450,5,108,0,0,450,451,5,97,0,0,451,
        452,5,116,0,0,452,453,5,105,0,0,453,454,5,108,0,0,454,455,5,101,
        0,0,455,62,1,0,0,0,456,457,5,119,0,0,457,458,5,104,0,0,458,459,5,
        105,0,0,459,460,5,108,0,0,460,461,5,101,0,0,461,64,1,0,0,0,462,463,
        5,99,0,0,463,464,5,111,0,0,464,465,5,110,0,0,465,466,5,115,0,0,466,
        467,5,116,0,0,467,66,1,0,0,0,468,469,5,115,0,0,469,470,5,105,0,0,
        470,471,5,103,0,0,471,472,5,110,0,0,472,473,5,101,0,0,473,474,5,
        100,0,0,474,68,1,0,0,0,475,476,5,117,0,0,476,477,5,110,0,0,477,478,
        5,115,0,0,478,479,5,105,0,0,479,480,5,103,0,0,480,481,5,110,0,0,
        481,482,5,101,0,0,482,483,5,100,0,0,483,70,1,0,0,0,484,485,5,118,
        0,0,485,486,5,111,0,0,486,487,5,105,0,0,487,488,5,100,0,0,488,72,
        1,0,0,0,489,490,5,99,0,0,490,491,5,104,0,0,491,492,5,97,0,0,492,
        493,5,114,0,0,493,74,1,0,0,0,494,495,5,115,0,0,495,496,5,104,0,0,
        496,497,5,111,0,0,497,498,5,114,0,0,498,499,5,116,0,0,499,76,1,0,
        0,0,500,501,5,105,0,0,501,502,5,110,0,0,502,503,5,116,0,0,503,78,
        1,0,0,0,504,505,5,108,0,0,505,506,5,111,0,0,506,507,5,110,0,0,507,
        508,5,103,0,0,508,80,1,0,0,0,509,510,5,102,0,0,510,511,5,108,0,0,
        511,512,5,111,0,0,512,513,5,97,0,0,513,514,5,116,0,0,514,82,1,0,
        0,0,515,516,5,100,0,0,516,517,5,111,0,0,517,518,5,117,0,0,518,519,
        5,98,0,0,519,520,5,108,0,0,520,521,5,101,0,0,521,84,1,0,0,0,522,
        523,5,43,0,0,523,86,1,0,0,0,524,525,5,43,0,0,525,526,5,43,0,0,526,
        88,1,0,0,0,527,528,5,45,0,0,528,90,1,0,0,0,529,530,5,45,0,0,530,
        531,5,45,0,0,531,92,1,0,0,0,532,533,5,42,0,0,533,94,1,0,0,0,534,
        535,5,47,0,0,535,96,1,0,0,0,536,537,5,37,0,0,537,98,1,0,0,0,538,
        539,5,40,0,0,539,100,1,0,0,0,540,541,5,41,0,0,541,102,1,0,0,0,542,
        543,5,123,0,0,543,104,1,0,0,0,544,545,5,125,0,0,545,106,1,0,0,0,
        546,547,5,91,0,0,547,108,1,0,0,0,548,549,5,93,0,0,549,110,1,0,0,
        0,550,551,5,60,0,0,551,112,1,0,0,0,552,553,5,60,0,0,553,554,5,61,
        0,0,554,114,1,0,0,0,555,556,5,62,0,0,556,116,1,0,0,0,557,558,5,62,
        0,0,558,559,5,61,0,0,559,118,1,0,0,0,560,561,5,60,0,0,561,562,5,
        60,0,0,562,120,1,0,0,0,563,564,5,62,0,0,564,565,5,62,0,0,565,122,
        1,0,0,0,566,567,5,38,0,0,567,124,1,0,0,0,568,569,5,124,0,0,569,126,
        1,0,0,0,570,571,5,38,0,0,571,572,5,38,0,0,572,128,1,0,0,0,573,574,
        5,124,0,0,574,575,5,124,0,0,575,130,1,0,0,0,576,577,5,94,0,0,577,
        132,1,0,0,0,578,579,5,33,0,0,579,134,1,0,0,0,580,581,5,126,0,0,581,
        136,1,0,0,0,582,583,5,63,0,0,583,138,1,0,0,0,584,585,5,58,0,0,585,
        140,1,0,0,0,586,587,5,59,0,0,587,142,1,0,0,0,588,589,5,44,0,0,589,
        144,1,0,0,0,590,591,5,61,0,0,591,146,1,0,0,0,592,593,5,42,0,0,593,
        594,5,61,0,0,594,148,1,0,0,0,595,596,5,47,0,0,596,597,5,61,0,0,597,
        150,1,0,0,0,598,599,5,37,0,0,599,600,5,61,0,0,600,152,1,0,0,0,601,
        602,5,43,0,0,602,603,5,61,0,0,603,154,1,0,0,0,604,605,5,45,0,0,605,
        606,5,61,0,0,606,156,1,0,0,0,607,608,5,60,0,0,608,609,5,60,0,0,609,
        610,5,61,0,0,610,158,1,0,0,0,611,612,5,62,0,0,612,613,5,62,0,0,613,
        614,5,61,0,0,614,160,1,0,0,0,615,616,5,38,0,0,616,617,5,61,0,0,617,
        162,1,0,0,0,618,619,5,94,0,0,619,620,5,61,0,0,620,164,1,0,0,0,621,
        622,5,124,0,0,622,623,5,61,0,0,623,166,1,0,0,0,624,625,5,61,0,0,
        625,626,5,61,0,0,626,168,1,0,0,0,627,628,5,33,0,0,628,629,5,61,0,
        0,629,170,1,0,0,0,630,631,5,45,0,0,631,632,5,62,0,0,632,172,1,0,
        0,0,633,634,5,46,0,0,634,174,1,0,0,0,635,636,5,46,0,0,636,637,5,
        46,0,0,637,638,5,46,0,0,638,176,1,0,0,0,639,643,7,7,0,0,640,642,
        7,8,0,0,641,640,1,0,0,0,642,645,1,0,0,0,643,641,1,0,0,0,643,644,
        1,0,0,0,644,178,1,0,0,0,645,643,1,0,0,0,646,648,7,9,0,0,647,646,
        1,0,0,0,648,649,1,0,0,0,649,647,1,0,0,0,649,650,1,0,0,0,650,651,
        1,0,0,0,651,652,6,89,1,0,652,180,1,0,0,0,653,655,5,13,0,0,654,656,
        5,10,0,0,655,654,1,0,0,0,655,656,1,0,0,0,656,659,1,0,0,0,657,659,
        5,10,0,0,658,653,1,0,0,0,658,657,1,0,0,0,659,660,1,0,0,0,660,661,
        6,90,1,0,661,182,1,0,0,0,662,663,5,47,0,0,663,664,5,42,0,0,664,668,
        1,0,0,0,665,667,9,0,0,0,666,665,1,0,0,0,667,670,1,0,0,0,668,669,
        1,0,0,0,668,666,1,0,0,0,669,671,1,0,0,0,670,668,1,0,0,0,671,672,
        5,42,0,0,672,673,5,47,0,0,673,674,1,0,0,0,674,675,6,91,1,0,675,184,
        1,0,0,0,676,677,5,47,0,0,677,678,5,47,0,0,678,682,1,0,0,0,679,681,
        8,0,0,0,680,679,1,0,0,0,681,684,1,0,0,0,682,680,1,0,0,0,682,683,
        1,0,0,0,683,685,1,0,0,0,684,682,1,0,0,0,685,686,6,92,1,0,686,186,
        1,0,0,0,687,688,9,0,0,0,688,188,1,0,0,0,26,0,191,202,208,216,220,
        223,233,242,252,255,260,266,270,276,279,284,287,291,296,643,649,
        655,658,668,682,2,0,1,0,6,0,0
    ]

class CLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INCLUDE_DIRECTIVE = 1
    STRING_LITERAL = 2
    CHAR_CONSTANT = 3
    INTEGER_CONSTANT = 4
    FLOAT_CONSTANT = 5
    EXPONENT = 6
    CLASS = 7
    NEW = 8
    AUTO = 9
    BREAK = 10
    CASE = 11
    CONTINUE = 12
    DEFAULT = 13
    DO = 14
    ELSE = 15
    ENUM = 16
    EXTERN = 17
    FOR = 18
    GOTO = 19
    IF = 20
    INLINE = 21
    REGISTER = 22
    RESTRICT = 23
    RETURN = 24
    SIZEOF = 25
    STATIC = 26
    STRUCT = 27
    SWITCH = 28
    TYPEDEF = 29
    UNION = 30
    VOLATILE = 31
    WHILE = 32
    CONST = 33
    SIGNED = 34
    UNSIGNED = 35
    VOID = 36
    CHAR = 37
    SHORT = 38
    INT = 39
    LONG = 40
    FLOAT = 41
    DOUBLE = 42
    PLUS = 43
    PLUS_PLUS = 44
    MINUS = 45
    MINUS_MINUS = 46
    STAR = 47
    DIV = 48
    MOD = 49
    LP = 50
    RP = 51
    LC = 52
    RC = 53
    LSQRB = 54
    RSQRB = 55
    LT = 56
    LTE = 57
    GT = 58
    GTE = 59
    LEFT_SHIFT = 60
    RIGHT_SHIFT = 61
    AND = 62
    OR = 63
    AND_AND = 64
    OR_OR = 65
    CARET = 66
    NOT = 67
    TILDE = 68
    QUESTION = 69
    COLON = 70
    SEMI = 71
    COMMA = 72
    ASSIGN = 73
    STAR_ASSIGN = 74
    DIV_ASSIGN = 75
    MOD_ASSIGN = 76
    PLUS_ASSIGN = 77
    MINUS_ASSIGN = 78
    LEFT_SHIFT_ASSIGN = 79
    RIGHT_SHIFT_ASSIGN = 80
    BITWISE_AND_ASSIGN = 81
    BITWISE_XOR_ASSIGN = 82
    BITWISE_OR_ASSIGN = 83
    EQ = 84
    NEQ = 85
    ARROW = 86
    DOT = 87
    ELLIPSIS = 88
    IDENTIFIER = 89
    WS = 90
    NEWLINE = 91
    BLOCK_COMMENT = 92
    LINE_COMMENT = 93
    ANY = 94

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'new'", "'auto'", "'break'", "'case'", "'continue'", 
            "'default'", "'do'", "'else'", "'enum'", "'extern'", "'for'", 
            "'goto'", "'if'", "'inline'", "'register'", "'restrict'", "'return'", 
            "'sizeof'", "'static'", "'struct'", "'switch'", "'typedef'", 
            "'union'", "'volatile'", "'while'", "'const'", "'signed'", "'unsigned'", 
            "'void'", "'char'", "'short'", "'int'", "'long'", "'float'", 
            "'double'", "'+'", "'++'", "'-'", "'--'", "'*'", "'/'", "'%'", 
            "'('", "')'", "'{'", "'}'", "'['", "']'", "'<'", "'<='", "'>'", 
            "'>='", "'<<'", "'>>'", "'&'", "'|'", "'&&'", "'||'", "'^'", 
            "'!'", "'~'", "'?'", "':'", "';'", "','", "'='", "'*='", "'/='", 
            "'%='", "'+='", "'-='", "'<<='", "'>>='", "'&='", "'^='", "'|='", 
            "'=='", "'!='", "'->'", "'.'", "'...'" ]

    symbolicNames = [ "<INVALID>",
            "INCLUDE_DIRECTIVE", "STRING_LITERAL", "CHAR_CONSTANT", "INTEGER_CONSTANT", 
            "FLOAT_CONSTANT", "EXPONENT", "CLASS", "NEW", "AUTO", "BREAK", 
            "CASE", "CONTINUE", "DEFAULT", "DO", "ELSE", "ENUM", "EXTERN", 
            "FOR", "GOTO", "IF", "INLINE", "REGISTER", "RESTRICT", "RETURN", 
            "SIZEOF", "STATIC", "STRUCT", "SWITCH", "TYPEDEF", "UNION", 
            "VOLATILE", "WHILE", "CONST", "SIGNED", "UNSIGNED", "VOID", 
            "CHAR", "SHORT", "INT", "LONG", "FLOAT", "DOUBLE", "PLUS", "PLUS_PLUS", 
            "MINUS", "MINUS_MINUS", "STAR", "DIV", "MOD", "LP", "RP", "LC", 
            "RC", "LSQRB", "RSQRB", "LT", "LTE", "GT", "GTE", "LEFT_SHIFT", 
            "RIGHT_SHIFT", "AND", "OR", "AND_AND", "OR_OR", "CARET", "NOT", 
            "TILDE", "QUESTION", "COLON", "SEMI", "COMMA", "ASSIGN", "STAR_ASSIGN", 
            "DIV_ASSIGN", "MOD_ASSIGN", "PLUS_ASSIGN", "MINUS_ASSIGN", "LEFT_SHIFT_ASSIGN", 
            "RIGHT_SHIFT_ASSIGN", "BITWISE_AND_ASSIGN", "BITWISE_XOR_ASSIGN", 
            "BITWISE_OR_ASSIGN", "EQ", "NEQ", "ARROW", "DOT", "ELLIPSIS", 
            "IDENTIFIER", "WS", "NEWLINE", "BLOCK_COMMENT", "LINE_COMMENT", 
            "ANY" ]

    ruleNames = [ "INCLUDE_DIRECTIVE", "STRING_LITERAL", "CHAR_CONSTANT", 
                  "INTEGER_CONSTANT", "FLOAT_CONSTANT", "EXPONENT", "CLASS", 
                  "NEW", "AUTO", "BREAK", "CASE", "CONTINUE", "DEFAULT", 
                  "DO", "ELSE", "ENUM", "EXTERN", "FOR", "GOTO", "IF", "INLINE", 
                  "REGISTER", "RESTRICT", "RETURN", "SIZEOF", "STATIC", 
                  "STRUCT", "SWITCH", "TYPEDEF", "UNION", "VOLATILE", "WHILE", 
                  "CONST", "SIGNED", "UNSIGNED", "VOID", "CHAR", "SHORT", 
                  "INT", "LONG", "FLOAT", "DOUBLE", "PLUS", "PLUS_PLUS", 
                  "MINUS", "MINUS_MINUS", "STAR", "DIV", "MOD", "LP", "RP", 
                  "LC", "RC", "LSQRB", "RSQRB", "LT", "LTE", "GT", "GTE", 
                  "LEFT_SHIFT", "RIGHT_SHIFT", "AND", "OR", "AND_AND", "OR_OR", 
                  "CARET", "NOT", "TILDE", "QUESTION", "COLON", "SEMI", 
                  "COMMA", "ASSIGN", "STAR_ASSIGN", "DIV_ASSIGN", "MOD_ASSIGN", 
                  "PLUS_ASSIGN", "MINUS_ASSIGN", "LEFT_SHIFT_ASSIGN", "RIGHT_SHIFT_ASSIGN", 
                  "BITWISE_AND_ASSIGN", "BITWISE_XOR_ASSIGN", "BITWISE_OR_ASSIGN", 
                  "EQ", "NEQ", "ARROW", "DOT", "ELLIPSIS", "IDENTIFIER", 
                  "WS", "NEWLINE", "BLOCK_COMMENT", "LINE_COMMENT", "ANY" ]

    grammarFileName = "C.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


